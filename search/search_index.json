{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MySQL Workbench","text":""},{"location":"#introduction","title":"Introduction","text":"<p>This guide contains instructions for using MySQLWorkbench to create a MySQL database, which is a structured collection of data managed by MySQL software. MySQLWorkbench is a user-friendly visual interface that allows users to create and manage MySQL databases without needing to write MySQL queries.</p>"},{"location":"#intended-users-and-knowledge-level","title":"Intended Users and Knowledge Level","text":"<p>The intended audience of this guide is BCIT Full Stack Web Development students enrolled in the \u201cCOMP 2350 - Introduction to Database Management\u201d course.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>MacOS Ventura Version 13.0.1 or later</li> <li>MySQL Community Server 8.0 Installed</li> <li>MySQL Workbench Installed</li> <li>Basic knowledge of relational databases.</li> </ul> <p>No prior knowledge of the SQL language or MySQLWorkbench is required. Following the steps in this guide will prepare you to work on lab assignments involving creating, reading, updating, and deleting (CRUD) data within a MySQL database.</p>"},{"location":"#typographical-conventions","title":"Typographical Conventions","text":"Text Meaning Bold Action required for step Italics Note <code>Monospace</code> Data type"},{"location":"#instructions","title":"Instructions","text":"<ul> <li>Creating schemas</li> <li>Adding data tables to schemas and inserting data</li> <li>Establishing relationships between tables</li> <li>Deleting schemas.</li> </ul> <p>For full documentation visit mysql.com.</p>"},{"location":"glossary/","title":"Glossary","text":""},{"location":"glossary/#auto-increment-ai","title":"Auto Increment (AI)","text":"<p>A column with the Auto Increment property will contain a number that increases for each row in the table. This property can be used for primary keys to uniqely identify rows.</p>"},{"location":"glossary/#cell","title":"Cell","text":"<p>A cell is an individual piece of data at the intersection of a column and row.</p>"},{"location":"glossary/#column","title":"Column","text":"<p>\"Column\" is a vertical data element in a table that represents a specific attribute or data field. Each column in a table is defined by a name, a data type, and optional constraints such as nullability, uniqueness, and default values.</p>"},{"location":"glossary/#foreign-key-fk","title":"Foreign Key (FK)","text":"<p>\"FK\" in database stands for \"Foreign Key.\" A foreign key is a field in a table that refers to the primary key of another table. It establishes a relationship between two tables based on the values of the columns that they share.</p>"},{"location":"glossary/#null-not-null-nn","title":"Null / Not Null (NN)","text":"<p>Null is a datatype that means empty. A column in a table can be assigned the \"Not Null\" restriction so that it is not allowed to be empty.</p>"},{"location":"glossary/#primary-key-pk","title":"Primary Key (PK)","text":"<p>\"PK\" in database stands for \"Primary Key.\" A primary key is a field or combination of fields that uniquely identifies each record in a table of a database. The primary key is used to enforce data integrity and ensure that each record in the table is unique and identifiable.</p>"},{"location":"glossary/#reference-column","title":"Reference Column","text":"<p>A Reference Column is the column referenced by a Foreign Key.</p>"},{"location":"glossary/#reference-table","title":"Reference Table","text":"<p>A Reference Table is the table that contains the Foreign Key.</p>"},{"location":"glossary/#row","title":"Row","text":"<p>\"Row\" is a horizontal record in a table that represents a single instance of data. Each row in a table contains a set of related values for the columns defined in the table.</p>"},{"location":"glossary/#schema","title":"Schema","text":"<p>Schema is a database object that contains a collection of tables, views, stored procedures, and other database objects.</p>"},{"location":"glossary/#table","title":"Table","text":"<p>Table is a database object that stores data in a set of named rows and columns. They are used to organize and store data in a structured manner. Each table has a unique name and is associated with a specific database schema.</p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#1-error-connecting-to-database","title":"1 - Error connecting to database","text":"<p>Open System Settings &gt; MySQL and click \"Start MySQL server\".</p>"},{"location":"troubleshooting/#2-error-entering-data-into-table","title":"2 - Error entering data into table","text":""},{"location":"troubleshooting/#21-fill-in-all-required-fields","title":"2.1 - Fill in all required fields","text":"<p>Make sure that all columns are filled in before pressing \"Apply\". Do not enter data into columns set to Auto Increment.</p>"},{"location":"troubleshooting/#22-click-outside-of-cell","title":"2.2 - Click outside of cell","text":"<p>Make sure that the cell for the last piece of data that you entered is not highlighted before pressing \"Apply\". Click the background of the \"Result Grid\" to deselect the cell.</p>"},{"location":"troubleshooting/#3-error-creating-fk","title":"3 - Error creating FK","text":"<p>Make sure that the datatype of the foreign key column is the same as the datatype of the primary key in the reference table.</p>"},{"location":"troubleshooting/#4-forgot-root-password-for-localhost-database","title":"4 - Forgot root password for localhost database","text":"<p>This guide in the MySQL reference manual explains how to reset the root password created during instiallation of MySQL. Remembering this password is essential in order to connect to the localhost database.</p>"},{"location":"instructions/task1/","title":"Task 1 - Creating a Schema","text":""},{"location":"instructions/task1/#introduction","title":"Introduction","text":"<p>Welcome to this tutorial on creating and dropping schemas in MySQL Workbench. In this guide, we will show you step-by-step how to create a new schema in MySQL Workbench.</p> <p>Whether you are a beginner or an experienced user, this tutorial will provide you with the necessary skills to create schemas in MySQL Workbench. So, let's get started!</p> <p>Note: The examples that we create below are referenced in Task 2 \u2013 Creating Tables and Data Entry. Complete these examples if you want to follow the examples in Task 2.</p>"},{"location":"instructions/task1/#create-a-schema","title":"Create a schema","text":"<ol> <li> <p>Open MySQLWorkbench by clicking on the MySQLWorkbench icon,     which opens the \u201cHome Window\u201d. This window displays a section titled \"MySQL Connections\".        One connection called \u201cLocal instance: 3306\u201d should already exist. </p> </li> <li> <p>Click on the \"Local Instance 3306\" connection to connect to your local MySQL server.    Once you are connected you will see a screen with several tabs on top and in the toolbar on top you will see a Schema button which creates you a database. </p> </li> <li> <p>Click on the schema button.    you will now be prompted to enter a name for your new schema. </p> </li> <li> <p>Type a name for your new schema. We named our schema \"full_stack_web_development\". Note:  Make sure to choose a name that is descriptive and easy to remember and do not change the character set and the collation setting. </p> </li> <li> <p>Click on the \"Apply\" button, after you have entered your schema name.    Once you click on the apply button you will get a pop-up message that shows you MySQL query which is the command related to the task you are doing manually. </p> </li> <li> <p>Click \"Apply\", then \"Close\".  </p> </li> </ol> <p>Congratulations! You have just created your first schema in MySQL Workbench. You can now begin adding tables to your new schema.</p>"},{"location":"instructions/task1/#conclusion","title":"Conclusion","text":"<p>Creating and dropping schemas is an essential skill in MySQL Workbench that every user must learn. By following the instructions in this tutorial, you should be able to create a new schema in MySQL Workbench, select a name for your schema, and drop the schema if necessary. Remember to choose a descriptive name for your schema and avoid changing the character set and the collation setting.</p>"},{"location":"instructions/task2/","title":"Task 2 - Creating Tables and Entering Data","text":""},{"location":"instructions/task2/#introduction","title":"Introduction","text":"<p>In this guide, we will show you step-by-step how to create a new table in MySQL Workbench and add data to it. You will learn how to define the columns for your table, specify data types and properties, and enter data into the table.</p> <p>Note: The examples that we create below are referenced in Task 3 \u2013 Establishing Relationships Between Tables. Complete these examples if you want to follow the examples in Task 3.</p>"},{"location":"instructions/task2/#creating-tables","title":"Creating Tables","text":"<ol> <li> <p>Find and Double click on the schema that you want to create a table in through the schema list.     Once you have selected the schema, clicking on it will bring up a screen with multiple tabs. </p> </li> <li> <p>Right click on the \"Tables\" tab and click on \"Create Table\".    You should see the \u201cEdit Table Screen\u201d and be prompted to enter a name for your new table. </p> </li> <li> <p>Enter a name for the table.   We named our table \"term_1_courses\". </p> </li> <li> <p>Click on \"&lt;click to edit&gt;\" to define the first column. For each column, you will need to enter a name, data type, and any properties that you want to assign to that column.    For our example we added the following columns:   - \"course_id\" with datatype <code>INT</code> and \"PK\", \"NN\", and \"AI\" checked,   - \"course_code\" with datatype <code>TEXT</code> and \"NN\" checked,   - \"description\" with datatype <code>TEXT</code> and \"NN\" checked,   - \"instructor_id\" with datatype <code>INT</code>. Note: For reference on data types, visit the MySQL Reference Manual section on data types. </p> </li> <li> <p>Click on the \"Apply\" button once you have defined all of your columns to create your new table. A pop-up window should appear displaying the MySQL query for creating the table. </p> </li> <li> <p>Click \"Apply\", then \"Close\".  </p> </li> </ol> <p>Congratulations! You have just created a table in MySQL Workbench, you can now begin adding data to your new table.</p>"},{"location":"instructions/task2/#entering-data","title":"Entering Data","text":"<ol> <li> <p>Click on the schema where you created a table. </p> </li> <li> <p>Click on \"Tables\" to open the list </p> </li> <li> <p>Hover your mouse over the table where you want to insert data. A row selection button  should appear. </p> </li> <li> <p>Click on the row selection button.Then you will see a \"Data\" tab, where you have all the columns that you created earlier in your table. </p> </li> <li> <p>Double click on <code>NULL</code> underneath a column name. <code>NULL</code> should disappear and the area should be highlighted with a border. </p> </li> <li> <p>Type your data. </p> </li> <li> <p>Continue entering data for each column until you have entered all the data you want to insert into the row.    We added a course called \"COMM1116\" with a description \"Business Communications\" Note: When enterering a row of data, input can be empty when the column does not have the property \"Not Null\" (NN), or if it has the \"Auto Increment\" (AI) property. </p> </li> <li> <p>Click on the \"Apply\" button to insert the data into the table. A pop-up window should appear displaying the MySQL query for entering the data. </p> </li> <li> <p>Click \"Apply\", then \"Close\".  </p> </li> </ol> <p>Congratulations! You have just inserted data into a MySQL Workbench table.</p>"},{"location":"instructions/task2/#knowledge-check","title":"Knowledge Check","text":"<p>To show what you've learned, complete the following instructions to create a new table.</p> <p>Note:  The examples on this page must be completed to follow the examples in Task 3.</p> <ol> <li> <p>Create a new table called \"instructors\" in the \"full_stack_web_development\" schema </p> </li> <li> <p>Create the following columns:   - \"instructor_id\" with datatype <code>INT</code> and \"PK\", \"NN\", and \"AI\" checked,   - \"name\" with datatype <code>TEXT</code> and \"NN\" checked. </p> </li> <li> <p>Enter a new row of data and enter an instructor name.</p> </li> </ol>"},{"location":"instructions/task2/#conclusion","title":"Conclusion","text":"<p>Creating tables and entering data into them is an essential skill in MySQL Workbench that every user must learn. By following the step-by-step instructions in this tutorial, you should be able to create a new table in MySQL Workbench, define its columns, and enter data into the table. Remember to specify the appropriate data types and properties for each column and leave the \"Auto Increment\" columns blank if applicable.</p>"},{"location":"instructions/task3/","title":"Task 3 - Establishing Relatinships Between Tables","text":""},{"location":"instructions/task3/#introduction","title":"Introduction","text":"<p>Welcome to this tutorial on establishing relationships between tables in MySQL Workbench. Tables in a database can be linked together by primary and foreign keys. In this guide, we will show you step-by-step how to create a foreign key (FK) in MySQL Workbench. You will need at least two tables in your database that reference each other to use these instructions.</p> <p>Establishing relationship between tables requires the database contains at least two tables, and the tables contain related data. Our example models the relationship between a course and an instructor.</p> <p>Note: The examples we created below reference the examples from Task 1 and Task 2. If you want to follow along with the examples for this Task, create the examples from the previous tasks first.</p>"},{"location":"instructions/task3/#creating-foreign-key","title":"Creating Foreign Key","text":"<p>The following instructions show how to create a foreign key (FK) in MySQLWorkbench.</p> <p>Note: For reference on primary and foreign keys, visit the MySQL Reference Manual glossary.</p> <ol> <li> <p>Double click on the name of the schema that contains the table you want to edit from the menu on the left.     The schema name should be bolded and a menu should open up beneath the name. </p> </li> <li> <p>Click on the arrow beside \u201cTables\u201d to view the list of tables in the database.    </p> </li> <li> <p>Hover the mouse over the name of the table where the foreign key will be added.    Three icons should appear to the right of the table name. </p> </li> <li> <p>Click the wrench icon. The \"Edit Table Screen\" should come into view. </p> </li> <li> <p>Click the \"Foreign Keys\" tab in the menu near the bottom of the \"Edit Table Screen\".    The \"Foreign Key Screen\" should come into view. </p> </li> <li> <p>Double click &lt; click to edit &gt; underneath the \"Foreign Key\" heading on the left of the \"Foreign Key Screen\".    </p> </li> <li> <p>Type a name for your FK and press ENTER.     We named our FK \"term_1_courses_instructor_id\". </p> </li> <li> <p>Click next to the FK name under the \u201cReferenced Table\u201d heading.    A list of tables in your schema should appear. </p> </li> <li> <p>Select the table that the FK is referencing.      In this example, we selected \"instructors\" as the referenced table.     After making the FK, the table's columns' names should appear under \"Foreign key details\". </p> </li> <li> <p>Check the box for your FK column beneath the \"Column\" heading under \"Foreign key details\".    Then, the referenced column should default to the primary key of the referenced table. </p> </li> <li> <p>Select the column the FK is referencing by clicking under the \"Referenced Column\" heading (if it is not already selected). </p> </li> <li> <p>Click \"Apply\" at the bottom of the \"Foreign Key Screen\".    A pop-up window should appear displaying the MySQL query for creating the FK. </p> </li> <li> <p>Click \u201cApply\u201d, then \"Close\".</p> </li> </ol>"},{"location":"instructions/task3/#conclusion","title":"Conclusion","text":"<p>Establishing relationships between tables is an important aspect of database management. In MySQL Workbench, this can be done by creating foreign keys between tables. By creating foreign keys, tables can reference each other and maintain data integrity. In this task, we learned how to create foreign keys in MySQL Workbench. We went through step-by-step instructions on how to create a foreign key, including selecting the tables and columns involved, and applying the changes.</p>"},{"location":"instructions/task4/","title":"Task 4 - Dropping Schemas","text":""},{"location":"instructions/task4/#introduction","title":"Introduction","text":"<p>In a MySQL database, it may be necessary to drop a schema (database) for various reasons, such as restructuring or cleaning up the database. This task requires careful consideration and caution since dropping a schema will permanently delete all of its data. In this guide, we will walk you through the process of dropping a schema in MySQL Workbench.</p>"},{"location":"instructions/task4/#dropping-a-schema","title":"Dropping a Schema","text":"<ol> <li> <p>Right click on the schema that you created, you will see a screen with several tabs. </p> </li> <li> <p>Delete your schema (database) by selecting the drop schema button from the list.    A pop-up notification asking for your confirmation to delete your schema should be expected. </p> </li> <li> <p>Click on \u201cDrop Now\u201d Warning: Deleting a schema is irreversible. </p> </li> </ol> <p>Congratulations! You have just deleted your first schema.</p>"},{"location":"instructions/task4/#conclusion","title":"Conclusion","text":"<p>In this instruction set, we learned how to drop a schema in MySQL Workbench. The process involved right-clicking on the schema that needs to be deleted, selecting the drop schema option from the list, and clicking \"Drop Now\" after confirming the deletion in the pop-up notification. It is important to be cautious when dropping a schema since it will permanently delete all the tables and data within that schema.</p>"}]}